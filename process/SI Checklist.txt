| SI # | Skill Description                                                     | Commit ID |
|------|-----------------------------------------------------------------------|-----------|
| 1    | line, ellipse, rect, triangle, quad, arc, curve                       |           | DONE
| 2    | fill, stroke, strokeWeight, noFill, noStroke, color                   |           | DONE
| 3    | Modes: CORNER, CORNERS, CENTER, RADIUS                                |           | DONE
| 4    | setup(), draw()                                                       |           | DONE
| 5    | background(), random(), noise()                                       |           | DONE
| 6    | constrain(), dist()                                                   |           | DONE
| 7    | keyPressed(), keyReleased(), keyPressed, mousePressed(), mousePressed |           | DONE
| 8    | increment operators: ++, +=, --, -=, *=, /=                           |           | DONE
| 9    | declare and use a local variable                                      |           | DONE
| 10   | declare and use a global variable                                     |           | DONE
| 11   | println(), stop()                                                     |           | DONE
| 12   | conditional statements: if, else if, else                             |           | DONE
| 13   | Boolean expressions: ==, >=, <=, >, <, !=                             |           | DONE
| 14   | Logical operators: &&, \|\|                                           |           | DONE
| 15   | switch statement                                                      |           | DONE
| 16   | for loop, while loop                                                  |           | DONE
| 17   | A nested loop                                                         |           | DONE
| 18   | break                                                                 |           | DONE
| 19   | N/A: Question. See process/Question Answers.txt                       |           | -------------
| 20   | Declare & call a function with no parameters and no return type       |           | DONE
| 21   | Declare & call a function with a return type                          |           | DONE
| 22   | N/A: Question. See process/Question Answers.txt                       |           | -------------
| 23   | Declare a function with a value-type argument                         |           | DONE
| 24   | Declare a function with a reference-type argument                     |           | DONE
| 25   | N/A: Question. See process/Question Answers.txt                       |           | -------------
| 26   | N/A: Question. See process/Question Answers.txt                       |           | -------------
| 27   | N/A: Question. See process/Question Answers.txt                       |           | -------------
| 28   | Write a class with a constructor function                             |           | DONE
| 29   | Use the keyword new to instantiate an object                          |           | DONE
| 30   | Write a constructor function with parameters                          |           | DONE
| 31   | N/A: Question. See process/Question Answers.txt                       |           | -------------
| 32   | N/A: Question. See process/Question Answers.txt                       |           | -------------
| 33   | Initialize and populate an array                                      |           | DONE
| 34   | Initialize and populate an ArrayList                                  |           | DONE
| 35   | Manage a set of objects with an array or ArrayList                    |           | DONE
| 36   | Use an ArrayList method: size(), get(), remove(), contains()          |           | DONE
| 37   | N/A: Question. See process/Question Answers.txt                       |           | -------------
| 38   | Use the PVector class                                                 |           | DONE
| 39   | Do some basic physics: use PVA (due to gravity) vectors               |           | DONE
| 40   | Find the direction and distance between two points                    |           | DONE
| 41   | Create a random 2D vector                                             |           | DONE
| 42   | N/A: Question. See process/Question Answers.txt                       |           | -------------
| 43   | Use a new PVector method.                                             |           | DONE
| 44   | Use a timer                                                           |           |
| 45   | Switch between “game states” using conditional statements             |           |
| 46   | Make a button or toggle switch with a roll-over highlight             |           |
| 47   | Create a drag & drop object                                           |           |
| 48   | Do animation with images (spritesheet or individual files)            |           |
| 49   | Use collision detection between objects                               |           | DONE
| 50   | Get joystick or gamepad input using GCP                               |           |